version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.6
  aws-cloudfront: topmonks/aws-cloudfront@1.0.0
  aws-s3: circleci/aws-s3@3.0.0
  browser-tools: circleci/browser-tools@1.2.4
  codecov: codecov/codecov@3.2.2
  github: topmonks/github@1.1.0
  node: circleci/node@5.0.0
  pulumi: pulumi/pulumi@2.0.0
  rollbar: rollbar/deploy@1.0.1
  slack: circleci/slack@4.7.1

commands:
  install_packages:
    steps:
      - node/install
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v2
          override-ci-command: yarn install --immutable
  read_deployment_envs:
    parameters:
      pulumi_backend_uri:
        type: string
        default: s3://pulumi.hlidacshopu.cz
      stack:
        type: string
        default: hlidac-shopu-prod
      s3_bucket_uri_property:
        type: string
        default: websiteS3BucketUri
      cloudfront_distribution_id_property:
        type: string
        default: websiteCloudFrontId
      working_directory:
        type: string
        default: .
    steps:
      - pulumi/login:
          cloud-url: << parameters.pulumi_backend_uri >>
      - run: pulumi stack select << parameters.stack >>
      - pulumi/stack_output:
          stack: << parameters.stack >>
          property_name: << parameters.s3_bucket_uri_property >>
          env_var: AWS_S3_BUCKET
          working_directory: << parameters.working_directory >>
      - pulumi/stack_output:
          stack: << parameters.stack >>
          property_name: << parameters.cloudfront_distribution_id_property >>
          env_var: AWS_CLOUDFRONT_DISTRIBUTION_ID
          working_directory: << parameters.working_directory >>
  deploy_website:
    parameters:
      site_name:
        type: string
      distribution_id:
        type: string
        default: "${AWS_CLOUDFRONT_DISTRIBUTION_ID}"
      paths:
        type: string
        default: "/*"
      after_s3_sync:
        description: Steps that will be execute after S3 sync, but before Cloudfront distribution invalidation
        type: steps
        default: []
    steps:
      - read_deployment_envs
      - aws-s3/sync:
          from: public/<< parameters.site_name >>
          to: s3://<< parameters.site_name >>
      - steps: << parameters.after_s3_sync >>
      - aws-cloudfront/invalidate:
          distribution_id: << parameters.distribution_id >>
          paths: << parameters.paths >>

jobs:
  test-actors:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    steps:
      - checkout
      - run: nvm install $(< .nvmrc)
      - install_packages
      - run:
          name: Lint actors
          command: yarn lint:actors
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  test-lib:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    steps:
      - checkout
      - run: nvm install $(< .nvmrc)
      - install_packages
      - run:
          name: Run tests
          command: yarn test:lib
      - codecov/upload:
          file: coverage/lcov.info
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: ./test-results.xml
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  build-website:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    environment:
      ROLLBAR_ACCESS_TOKEN: "103d0a6fb0f7469abb633dcbc6920122"
    steps:
      - checkout
      - install_packages
      - run:
          name: Lint website
          command: yarn lint:website
      - run:
          name: Export build metadata
          command: |
            echo '{}' | \
            jq --arg key0 'environment' \
               --arg value0 'production' \
               --arg key1 'version' \
               --arg value1 $CIRCLE_SHA1 \
               '. | .[$key0]=$value0 | .[$key1]=$value1' \
            > www.hlidacshopu.cz/src/data/build.json
      - run:
          name: Build website
          command: yarn build:www.hlidacshopu.cz
      - run:
          name: Upload sourcemaps to Rollbar
          command: ./scripts/rollbar-upload-sourcemaps.mjs "$ROLLBAR_ACCESS_TOKEN" "$CIRCLE_SHA1"
      - persist_to_workspace:
          root: .
          paths: [public]
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  build-web-extension:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    steps:
      - checkout
      - install_packages
      - run:
          name: Build extension bundle
          command: yarn build:extension
      - run:
          name: Lint web extension
          command: |
            mkdir -p results
            yarn lint:extension
            yarn lint:extension -o json > results/lint.json
      - store_artifacts:
          path: ./results
      - run:
          name: Build web extensions
          command: |
            yarn build:chrome
            yarn build:firefox
      - store_artifacts:
          path: ./dist
      - persist_to_workspace:
          root: .
          paths: [dist, extension-dist, extension/content.js]
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  test-web-extension:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - install_packages
      - run:
          name: Make screenshots
          command: yarn node ./scripts/screenshotter.mjs
      - store_artifacts:
          path: ./screenshots

  publish-web-extensions:
    parameters:
      browser:
        type: string
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - install_packages
      - run:
          name: Publish extension
          command: yarn publish:<< parameters.browser >>
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
          mentions: "@here"
          channel: ntf-hlidac-shopu

  build-safari-extension:
    macos:
      xcode: "12.0.1"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-gem-cache-macos-{{ checksum "apple/osx/hlidac shopu/Gemfile.lock" }}
      - run:
          working_directory: "apple/osx/hlidac shopu"
          command: bundle install
      - run:
          name: Build and Release Mac Extension App
          working_directory: "apple/osx/hlidac shopu"
          command: |
            echo "$FASTLANE_APP_STORE_API_KEY" > fastlane/NWBNM44ASY.json
            bundle exec fastlane release
      - save_cache:
          paths:
            - ~/.bundle
          key: v1-gem-cache-macos-{{ checksum "apple/osx/hlidac shopu/Gemfile.lock" }}
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  build-ios-app:
    macos:
      xcode: "12.0.1"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-gem-cache-ios-{{ checksum "apple/ios/Gemfile.lock" }}
      - run:
          working_directory: "apple/ios"
          command: bundle install
      - run:
          name: Build and Release iOS App
          working_directory: "apple/ios"
          command: |
            echo "$FASTLANE_APP_STORE_API_KEY" > fastlane/NWBNM44ASY.json
            bundle exec fastlane release
      - save_cache:
          paths:
            - ~/.bundle
          key: v1-gem-cache-ios-{{ checksum "apple/ios/Gemfile.lock" }}
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  provision:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    environment:
      AWS_STS_REGIONAL_ENDPOINTS: regional
    steps:
      - checkout
      - pulumi/login:
          cloud-url: s3://pulumi.hlidacshopu.cz
      - install_packages
      - run:
          name: Lint API
          command: yarn lint:api
      - run: pulumi stack select hlidac-shopu-prod
      - pulumi/update:
          stack: hlidac-shopu-prod
          skip-preview: true
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  preview-provision:
    machine:
      image: ubuntu-2004:202111-02
    # resource_class: arm.medium
    steps:
      - checkout
      - pulumi/login:
          cloud-url: s3://pulumi.hlidacshopu.cz
      - install_packages
      - run: pulumi stack select hlidac-shopu-prod
      - pulumi/preview:
          stack: hlidac-shopu-prod
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  deploy-site:
    parameters:
      site_name:
        type: string
      after_s3_sync:
        type: steps
        default: []
    executor: aws-cli/default
    environment:
      ROLLBAR_ACCESS_TOKEN: "103d0a6fb0f7469abb633dcbc6920122"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - deploy_website:
          site_name: << parameters.site_name >>
          after_s3_sync: << parameters.after_s3_sync >>
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu
      - rollbar/notify_deploy

  merge_pr:
    docker:
      - image: cimg/base:2022.02
    steps:
      - checkout
      - github/install
      - github/merge_pr:
          rebase: true
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hlidac-shopu

  github_release:
    docker:
      - image: cimg/base:2022.02
    steps:
      - checkout
      - attach_workspace:
          at: .
      - github/install
      - github/release:
          tag: "$CIRCLE_TAG"
          files: dist/*.zip

workflows:
  ci:
    jobs:
      - test-actors:
          context: org-global
      - test-lib:
          context: org-global
          filters:
            branches:
              only: /.*/
            tags:
              only: /^extension-.*/
      - preview-provision:
          context:
            - org-global
            - app-hlidac-shopu
          filters:
            branches:
              ignore: trunk
      - provision:
          context:
            - org-global
            - app-hlidac-shopu
          requires:
            - test-lib
          filters:
            branches:
              only: trunk
      - build-web-extension:
          context: org-global
          requires:
            - test-lib
          filters:
            branches:
              only: /.*/
            tags:
              only: /^extension-.*/
#      - test-web-extension:
#          requires:
#            - build-web-extension
      - github_release:
          context:
            - org-github
            - org-global
          requires:
            - build-web-extension
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^extension-.*/
      - publish-web-extensions:
          name: publish-chrome-web-extension
          browser: chrome
          context:
            - org-global
            - app-hlidac-shopu
          requires:
            - build-web-extension
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^extension-.*/
#      - publish-web-extensions:
#          name: publish-firefox-web-extension
#          browser: firefox
#          context:
#            - org-global
#            - app-hlidac-shopu
#          requires:
#            - build-web-extension
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^extension-.*/
      - build-ios-app:
          context:
            - org-global
            - org-fastlane
          requires:
            - test-lib
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^extension-.*/
      - build-safari-extension:
          context:
            - org-global
            - org-fastlane
          requires:
            - build-web-extension
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^extension-.*/
      - build-website:
          context: org-global
          requires:
            - test-lib
      - deploy-site:
          site_name: www.hlidacshopu.cz
          context:
            - org-global
            - app-hlidac-shopu
          requires:
            - provision
            - build-website
          filters:
            branches:
              only: trunk
      - merge_pr:
          context:
            - org-github
            - org-global
          requires:
            - build-web-extension
            - build-website
            - preview-provision
          filters:
            branches:
              only: /renovate\/.*/
